name: Paladin CI build

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: '5'
    # uncomment database setup as needed
    # services:
    #   postgres:
    #     image: postgres
    #     env:
    #       POSTGRES_PASSWORD: my-secret
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install protoc
        run: |
          PB_REL="https://github.com/protocolbuffers/protobuf/releases"
          curl -LO $PB_REL/download/v25.1/protoc-25.1-linux-x86_64.zip
          unzip protoc-25.1-linux-x86_64.zip -d protoc
          echo "${PWD}/protoc/bin" >> $GITHUB_PATH

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'
          cache-dependency-path: |
            .gradle
            buildSrc/.gradle
            solidity/node_modules/amazon-cognito-identity-js/android/.gradle
            gradle/wrapper/gradle-wrapper.properties
            pente/gradle/wrapper/gradle-wrapper.properties
            portara/gradle/wrapper/gradle-wrapper.properties

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true
          cache-dependency-path: |
            zeto/go-sdk/go.sum
            domains/zeto/go.sum
            domains/noto/go.sum
            talaria/go.sum
            testinfra/go.sum
            toolkit_go/go.sum
            kata/go.sum

      - name: Setup Gradle
        with:
          gradle-version: 8.4
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew -PcomposeLogs=true build

        # env:
        #   CREATE_TEST_DB: 0 # github action setup a PSQL db service, so no need to create a test db again
        #   POSTGRES_HOSTNAME: postgres
        #   POSTGRES_PASSWORD: my-secret
        #   POSTGRES_PORT: 5432
#  docker-build:
#    runs-on: ubuntu-latest
#    # uncomment database setup as needed
#    # services:
#    #   postgres:
#    #     image: postgres
#    #     env:
#    #       POSTGRES_PASSWORD: my-secret
#    #     options: >-
#    #       --health-cmd pg_isready
#    #       --health-interval 10s
#    #       --health-timeout 5s
#    #       --health-retries 5
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: Build Docker image
#        working-directory: .
#        run: make docker
#        # env:
#        #   CREATE_TEST_DB: 0 # github action setup a PSQL db service, so no need to create a test db again
#        #   POSTGRES_HOSTNAME: postgres
#        #   POSTGRES_PASSWORD: my-secret
#        #   POSTGRES_PORT: 5432
