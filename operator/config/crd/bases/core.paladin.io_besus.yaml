---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: besus.core.paladin.io
spec:
  group: core.paladin.io
  names:
    kind: Besu
    listKind: BesuList
    plural: besus
    singular: besu
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Besu is the Schema for the besus API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BesuSpec defines the desired state of Besu
            properties:
              config:
                description: Settings from this config will be loaded as TOML and
                  used as the base of the configuration.
                type: string
              genesis:
                description: The name of the genesis CR that these nodes will use
                  to obtain their genesis file, and find bootnodes
                type: string
            required:
            - genesis
            type: object
          status:
            description: BesuStatus defines the observed state of Besu
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
