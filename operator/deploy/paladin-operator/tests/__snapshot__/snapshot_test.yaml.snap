Basic snapshot test:
  1: |
    raw: Welcome to Paladin!
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: paladin-operator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: paladin-operator
    subjects:
      - kind: ServiceAccount
        name: paladin-operator
        namespace: paladin
  3: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: paladin-operator
    rules:
      - apiGroups:
          - core.paladin.io
        resources:
          - nodes
          - smartcontracts
        verbs:
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - core.paladin.io
        resources:
          - nodes/status
        verbs:
          - get
      - apiGroups:
          - apps
        resources:
          - statefulsets
        verbs:
          - get
          - list
          - create
          - delete
      - apiGroups:
          - ""
        resources:
          - services
          - configmaps
        verbs:
          - get
          - list
          - create
          - delete
          - update
          - patch
  4: |
    apiVersion: v1
    data:
      config.yaml: |2
        {
            "paladin": {
                "image": "paladin:test",
                "labels": {
                    "app": "paladin"
                }
            }
        }
    kind: ConfigMap
    metadata:
      name: paladin-operator
      namespace: paladin
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: paladin-operator
        control-plane: controller-manager
      name: paladin-operator
      namespace: paladin
    spec:
      replicas: null
      selector:
        matchLabels:
          app.kubernetes.io/name: paladin-operator
      template:
        metadata:
          labels:
            app.kubernetes.io/name: paladin-operator
        spec:
          containers:
            - command:
                - /manager
              env:
                - name: CONFIG_PATH
                  value: /etc/config
              image: paladin-operator:latest
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 8081
                  scheme: HTTP
              name: paladin-operator
              ports:
                - containerPort: 80
                  name: http
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8081
                  scheme: HTTP
              resources:
                limits:
                  cpu: 500m
                  memory: 128Mi
                requests:
                  cpu: 10m
                  memory: 64Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
              volumeMounts:
                - mountPath: /etc/config/config.yaml
                  name: config
                  subPath: config.yaml
          securityContext:
            runAsNonRoot: true
          serviceAccountName: paladin-operator
          volumes:
            - configMap:
                name: paladin-operator
              name: config
  6: |
    apiVersion: v1
    kind: Service
    metadata:
      name: paladin-operator
      namespace: paladin
    spec:
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: http
      selector:
        app.kubernetes.io/name: paladin-operator
      type: ClusterIP
  7: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      name: paladin-operator
      namespace: paladin
Change namespace:
  1: |
    raw: Welcome to Paladin!
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: paladin-operator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: paladin-operator
    subjects:
      - kind: ServiceAccount
        name: paladin-operator
        namespace: test
  3: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: paladin-operator
    rules:
      - apiGroups:
          - core.paladin.io
        resources:
          - nodes
          - smartcontracts
        verbs:
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - core.paladin.io
        resources:
          - nodes/status
        verbs:
          - get
      - apiGroups:
          - apps
        resources:
          - statefulsets
        verbs:
          - get
          - list
          - create
          - delete
      - apiGroups:
          - ""
        resources:
          - services
          - configmaps
        verbs:
          - get
          - list
          - create
          - delete
          - update
          - patch
  4: |
    apiVersion: v1
    data:
      config.yaml: |2
        {
            "paladin": {
                "image": "paladin:test",
                "labels": {
                    "app": "paladin"
                }
            }
        }
    kind: ConfigMap
    metadata:
      name: paladin-operator
      namespace: test
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: paladin-operator
        control-plane: controller-manager
      name: paladin-operator
      namespace: test
    spec:
      replicas: null
      selector:
        matchLabels:
          app.kubernetes.io/name: paladin-operator
      template:
        metadata:
          labels:
            app.kubernetes.io/name: paladin-operator
        spec:
          containers:
            - command:
                - /manager
              env:
                - name: CONFIG_PATH
                  value: /etc/config
              image: paladin-operator:latest
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 8081
                  scheme: HTTP
              name: paladin-operator
              ports:
                - containerPort: 80
                  name: http
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8081
                  scheme: HTTP
              resources:
                limits:
                  cpu: 500m
                  memory: 128Mi
                requests:
                  cpu: 10m
                  memory: 64Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
              volumeMounts:
                - mountPath: /etc/config/config.yaml
                  name: config
                  subPath: config.yaml
          securityContext:
            runAsNonRoot: true
          serviceAccountName: paladin-operator
          volumes:
            - configMap:
                name: paladin-operator
              name: config
  6: |
    apiVersion: v1
    kind: Service
    metadata:
      name: paladin-operator
      namespace: test
    spec:
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: http
      selector:
        app.kubernetes.io/name: paladin-operator
      type: ClusterIP
  7: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      name: paladin-operator
      namespace: test
